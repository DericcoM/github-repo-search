{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/github-repo-search/src/components/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchRepos } from '../redux/repoSlice';\nimport { Button, TextField } from '@mui/material';\nimport styles from '../styles/SearchBar.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch();\n  const handleSearch = () => {\n    dispatch(fetchRepos(query));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.tableContainer,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search Repositories\",\n      variant: \"outlined\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"H3zNfrpynTsDFAc3ddyCCvnFWZ0=\", false, function () {\n  return [useDispatch];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useDispatch","fetchRepos","Button","TextField","styles","jsxDEV","_jsxDEV","SearchBar","_s","query","setQuery","dispatch","handleSearch","className","tableContainer","children","label","variant","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","_c","$RefreshReg$"],"sources":["/Users/aleksandr/github-repo-search/src/components/SearchBar.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../redux/store';\nimport { fetchRepos } from '../redux/repoSlice';\nimport { Button, TextField } from '@mui/material';\nimport styles from '../styles/SearchBar.module.scss'\n\nconst SearchBar: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch<AppDispatch>();\n\n  const handleSearch = () => {\n    dispatch(fetchRepos(query));\n  };\n\n  return (\n    <div className={styles.tableContainer}>\n      <TextField\n        label=\"Search Repositories\"\n        variant=\"outlined\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\n        Search\n      </Button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,OAAOC,MAAM,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGX,WAAW,CAAc,CAAC;EAE3C,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBD,QAAQ,CAACV,UAAU,CAACQ,KAAK,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEH,OAAA;IAAKO,SAAS,EAAET,MAAM,CAACU,cAAe;IAAAC,QAAA,gBACpCT,OAAA,CAACH,SAAS;MACRa,KAAK,EAAC,qBAAqB;MAC3BC,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAET,KAAM;MACbU,QAAQ,EAAGC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFnB,OAAA,CAACJ,MAAM;MAACe,OAAO,EAAC,WAAW;MAACS,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEf,YAAa;MAAAG,QAAA,EAAC;IAEnE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjB,EAAA,CArBID,SAAmB;EAAA,QAENP,WAAW;AAAA;AAAA4B,EAAA,GAFxBrB,SAAmB;AAuBzB,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}