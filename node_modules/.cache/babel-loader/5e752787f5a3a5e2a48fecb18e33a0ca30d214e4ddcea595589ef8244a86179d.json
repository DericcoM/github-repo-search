{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/github-repo-search/src/components/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchRepos } from '../redux/repoSlice';\nimport { TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch();\n  const handleSearch = () => {\n    dispatch(fetchRepos(query));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search Repositories\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSearch,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"H3zNfrpynTsDFAc3ddyCCvnFWZ0=\", false, function () {\n  return [useDispatch];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useDispatch","fetchRepos","TextField","Button","Box","jsxDEV","_jsxDEV","SearchBar","_s","query","setQuery","dispatch","handleSearch","display","alignItems","justifyContent","children","label","value","onChange","e","target","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","color","_c","$RefreshReg$"],"sources":["/Users/aleksandr/github-repo-search/src/components/SearchBar.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchRepos } from '../redux/repoSlice';\nimport { TextField, Button, Box } from '@mui/material';\n\nconst SearchBar: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSearch = () => {\n    dispatch(fetchRepos(query));\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n      <TextField\n        label=\"Search Repositories\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        fullWidth\n        margin=\"normal\"\n      />\n      <Button onClick={handleSearch} variant=\"contained\" color=\"primary\">\n        Search\n      </Button>\n    </Box>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBD,QAAQ,CAACV,UAAU,CAACQ,KAAK,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEH,OAAA,CAACF,GAAG;IAACS,OAAO,EAAC,MAAM;IAACC,UAAU,EAAC,QAAQ;IAACC,cAAc,EAAC,eAAe;IAAAC,QAAA,gBACpEV,OAAA,CAACJ,SAAS;MACRe,KAAK,EAAC,qBAAqB;MAC3BC,KAAK,EAAET,KAAM;MACbU,QAAQ,EAAGC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,SAAS;MACTC,MAAM,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFrB,OAAA,CAACH,MAAM;MAACyB,OAAO,EAAEhB,YAAa;MAACiB,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAAAd,QAAA,EAAC;IAEnE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtBID,SAAmB;EAAA,QAENP,WAAW;AAAA;AAAA+B,EAAA,GAFxBxB,SAAmB;AAwBzB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}