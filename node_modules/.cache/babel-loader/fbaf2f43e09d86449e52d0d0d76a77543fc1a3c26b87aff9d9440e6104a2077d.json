{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/github-repo-search/src/components/RepoTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, TablePagination } from '@mui/material';\nimport { setSortField, setSortOrder } from '../redux/repoSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RepoTable = () => {\n  _s();\n  const {\n    repos,\n    sortField,\n    sortOrder\n  } = useSelector(state => state.repos);\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const handleSort = field => {\n    const isAsc = sortField === field && sortOrder === 'asc';\n    dispatch(setSortField(field));\n    dispatch(setSortOrder(isAsc ? 'desc' : 'asc'));\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'forks_count',\n              direction: sortField === 'forks_count' ? sortOrder : 'asc',\n              onClick: () => handleSort('forks_count'),\n              children: \"Forks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'stargazers_count',\n              direction: sortField === 'stargazers_count' ? sortOrder : 'asc',\n              onClick: () => handleSort('stargazers_count'),\n              children: \"Stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'updated_at',\n              direction: sortField === 'updated_at' ? sortOrder : 'asc',\n              onClick: () => handleSort('updated_at'),\n              children: \"Last Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: repos.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(repo => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.forks_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.stargazers_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: new Date(repo.updated_at).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, repo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: repos.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RepoTable, \"wVucUz1Y1zqPzOxsaxd1Y96Hel0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = RepoTable;\nexport default RepoTable;\nvar _c;\n$RefreshReg$(_c, \"RepoTable\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","TablePagination","setSortField","setSortOrder","jsxDEV","_jsxDEV","Fragment","_Fragment","RepoTable","_s","repos","sortField","sortOrder","state","dispatch","page","setPage","rowsPerPage","setRowsPerPage","handleSort","field","isAsc","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","active","direction","onClick","slice","map","repo","name","language","forks_count","stargazers_count","Date","updated_at","toLocaleDateString","id","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/aleksandr/github-repo-search/src/components/RepoTable.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, TablePagination } from '@mui/material';\nimport { setSortField, setSortOrder } from '../redux/repoSlice';\n\nconst RepoTable: React.FC = () => {\n  const { repos, sortField, sortOrder } = useSelector((state: RootState) => state.repos);\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSort = (field: string) => {\n    const isAsc = sortField === field && sortOrder === 'asc';\n    dispatch(setSortField(field));\n    dispatch(setSortOrder(isAsc ? 'desc' : 'asc'));\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell>Language</TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'forks_count'}\n                direction={sortField === 'forks_count' ? sortOrder : 'asc'}\n                onClick={() => handleSort('forks_count')}\n              >\n                Forks\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'stargazers_count'}\n                direction={sortField === 'stargazers_count' ? sortOrder : 'asc'}\n                onClick={() => handleSort('stargazers_count')}\n              >\n                Stars\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'updated_at'}\n                direction={sortField === 'updated_at' ? sortOrder : 'asc'}\n                onClick={() => handleSort('updated_at')}\n              >\n                Last Updated\n              </TableSortLabel>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {repos.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((repo) => (\n            <TableRow key={repo.id}>\n              <TableCell>{repo.name}</TableCell>\n              <TableCell>{repo.language}</TableCell>\n              <TableCell>{repo.forks_count}</TableCell>\n              <TableCell>{repo.stargazers_count}</TableCell>\n              <TableCell>{new Date(repo.updated_at).toLocaleDateString()}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={repos.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n};\n\nexport default RepoTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}