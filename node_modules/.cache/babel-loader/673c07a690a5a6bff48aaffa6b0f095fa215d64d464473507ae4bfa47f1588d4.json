{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/github-repo-search/src/components/RepoTable.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSortField, setSortOrder, setSelectedRepo } from '../redux/repoSlice';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination, TableSortLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RepoTable = () => {\n  _s();\n  const {\n    repos,\n    sortField,\n    sortOrder,\n    loading,\n    error\n  } = useSelector(state => state.repos);\n  const dispatch = useDispatch();\n  const handleSort = field => {\n    const isAsc = sortField === field && sortOrder === 'asc';\n    dispatch(setSortOrder(isAsc ? 'desc' : 'asc'));\n    dispatch(setSortField(field));\n  };\n  const handleSelectRepo = repo => {\n    dispatch(setSelectedRepo(repo));\n  };\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'forks_count',\n              direction: sortField === 'forks_count' ? sortOrder : 'asc',\n              onClick: () => handleSort('forks_count'),\n              children: \"Forks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'stargazers_count',\n              direction: sortField === 'stargazers_count' ? sortOrder : 'asc',\n              onClick: () => handleSort('stargazers_count'),\n              children: \"Stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'updated_at',\n              direction: sortField === 'updated_at' ? sortOrder : 'asc',\n              onClick: () => handleSort('updated_at'),\n              children: \"Last Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: repos.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(repo => /*#__PURE__*/_jsxDEV(TableRow, {\n          onClick: () => handleSelectRepo(repo),\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.forks_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.stargazers_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: new Date(repo.updated_at).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, repo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: repos.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RepoTable, \"MqEMvXzHW0dP4br2fW6FwnjjIzw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = RepoTable;\nexport default RepoTable;\nvar _c;\n$RefreshReg$(_c, \"RepoTable\");","map":{"version":3,"names":["React","useSelector","useDispatch","setSortField","setSortOrder","setSelectedRepo","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","TableSortLabel","jsxDEV","_jsxDEV","Fragment","_Fragment","RepoTable","_s","repos","sortField","sortOrder","loading","error","state","dispatch","handleSort","field","isAsc","handleSelectRepo","repo","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","active","direction","onClick","slice","map","name","language","forks_count","stargazers_count","Date","updated_at","toLocaleDateString","id","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/aleksandr/github-repo-search/src/components/RepoTable.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { setSortField, setSortOrder, setSelectedRepo } from '../redux/repoSlice';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination, TableSortLabel } from '@mui/material';\n\nconst RepoTable: React.FC = () => {\n  const { repos, sortField, sortOrder, loading, error } = useSelector((state: RootState) => state.repos);\n  const dispatch = useDispatch();\n\n  const handleSort = (field: string) => {\n    const isAsc = sortField === field && sortOrder === 'asc';\n    dispatch(setSortOrder(isAsc ? 'desc' : 'asc'));\n    dispatch(setSortField(field));\n  };\n\n  const handleSelectRepo = (repo: any) => {\n    dispatch(setSelectedRepo(repo));\n  };\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell>Language</TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'forks_count'}\n                direction={sortField === 'forks_count' ? sortOrder : 'asc'}\n                onClick={() => handleSort('forks_count')}\n              >\n                Forks\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'stargazers_count'}\n                direction={sortField === 'stargazers_count' ? sortOrder : 'asc'}\n                onClick={() => handleSort('stargazers_count')}\n              >\n                Stars\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'updated_at'}\n                direction={sortField === 'updated_at' ? sortOrder : 'asc'}\n                onClick={() => handleSort('updated_at')}\n              >\n                Last Updated\n              </TableSortLabel>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {repos.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((repo) => (\n            <TableRow key={repo.id} onClick={() => handleSelectRepo(repo)}>\n              <TableCell>{repo.name}</TableCell>\n              <TableCell>{repo.language}</TableCell>\n              <TableCell>{repo.forks_count}</TableCell>\n              <TableCell>{repo.stargazers_count}</TableCell>\n              <TableCell>{new Date(repo.updated_at).toLocaleDateString()}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={repos.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n};\n\nexport default RepoTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}