{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/github-repo-search/src/components/RepoTable.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSortField, setSelectedRepo, setCurrentPage, setPageSize, sortAndPaginateRepos } from '../redux/repoSlice';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TableSortLabel, TablePagination } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RepoTable = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    repos,\n    sortField,\n    sortOrder,\n    currentPage,\n    pageSize\n  } = useSelector(state => state.repos);\n  const handleSort = field => {\n    dispatch(setSortField(field));\n    dispatch(sortAndPaginateRepos());\n  };\n  const handleChangePage = (event, newPage) => {\n    dispatch(setCurrentPage(newPage + 1));\n  };\n  const handleChangeRowsPerPage = event => {\n    dispatch(setPageSize(parseInt(event.target.value, 10)));\n    dispatch(sortAndPaginateRepos());\n  };\n  const startIndex = (currentPage - 1) * pageSize;\n  const paginatedRepos = repos.slice(startIndex, startIndex + pageSize);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'name',\n              direction: sortField === 'name' ? sortOrder : 'asc',\n              onClick: () => handleSort('name'),\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'language',\n              direction: sortField === 'language' ? sortOrder : 'asc',\n              onClick: () => handleSort('language'),\n              children: \"\\u042F\\u0437\\u044B\\u043A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'forks_count',\n              direction: sortField === 'forks_count' ? sortOrder : 'asc',\n              onClick: () => handleSort('forks_count'),\n              children: \"\\u0424\\u043E\\u0440\\u043A\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'stargazers_count',\n              direction: sortField === 'stargazers_count' ? sortOrder : 'asc',\n              onClick: () => handleSort('stargazers_count'),\n              children: \"\\u0417\\u0432\\u0451\\u0437\\u0434\\u044B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: sortField === 'updated_at',\n              direction: sortField === 'updated_at' ? sortOrder : 'asc',\n              onClick: () => handleSort('updated_at'),\n              children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: paginatedRepos.map(repo => /*#__PURE__*/_jsxDEV(TableRow, {\n          onClick: () => dispatch(setSelectedRepo(repo)),\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.forks_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: repo.stargazers_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: new Date(repo.updated_at).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, repo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: repos.length,\n      page: currentPage - 1,\n      onPageChange: handleChangePage,\n      rowsPerPage: pageSize,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RepoTable, \"BfG/bZId+/nWCinxtRerMfCRwlk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RepoTable;\nexport default RepoTable;\nvar _c;\n$RefreshReg$(_c, \"RepoTable\");","map":{"version":3,"names":["React","useSelector","useDispatch","setSortField","setSelectedRepo","setCurrentPage","setPageSize","sortAndPaginateRepos","Table","TableHead","TableRow","TableCell","TableBody","TableSortLabel","TablePagination","jsxDEV","_jsxDEV","Fragment","_Fragment","RepoTable","_s","dispatch","repos","sortField","sortOrder","currentPage","pageSize","state","handleSort","field","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","startIndex","paginatedRepos","slice","children","active","direction","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","name","language","forks_count","stargazers_count","Date","updated_at","toLocaleDateString","id","component","count","length","page","onPageChange","rowsPerPage","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/aleksandr/github-repo-search/src/components/RepoTable.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, AppDispatch } from '../redux/store';\nimport { setSortField, setSelectedRepo, setCurrentPage, setPageSize, sortAndPaginateRepos } from '../redux/repoSlice';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TableSortLabel, TablePagination } from '@mui/material';\nimport style from '.'\n\nconst RepoTable: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { repos, sortField, sortOrder, currentPage, pageSize } = useSelector((state: RootState) => state.repos);\n\n  const handleSort = (field: keyof typeof repos[0]) => {\n    dispatch(setSortField(field));\n    dispatch(sortAndPaginateRepos());\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    dispatch(setCurrentPage(newPage + 1));\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setPageSize(parseInt(event.target.value, 10)));\n    dispatch(sortAndPaginateRepos());\n  };\n\n  const startIndex = (currentPage - 1) * pageSize;\n  const paginatedRepos = repos.slice(startIndex, startIndex + pageSize);\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'name'}\n                direction={sortField === 'name' ? sortOrder : 'asc'}\n                onClick={() => handleSort('name')}\n              >\n                Название\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'language'}\n                direction={sortField === 'language' ? sortOrder : 'asc'}\n                onClick={() => handleSort('language')}\n              >\n                Язык\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'forks_count'}\n                direction={sortField === 'forks_count' ? sortOrder : 'asc'}\n                onClick={() => handleSort('forks_count')}\n              >\n                Форки\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'stargazers_count'}\n                direction={sortField === 'stargazers_count' ? sortOrder : 'asc'}\n                onClick={() => handleSort('stargazers_count')}\n              >\n                Звёзды\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>\n              <TableSortLabel\n                active={sortField === 'updated_at'}\n                direction={sortField === 'updated_at' ? sortOrder : 'asc'}\n                onClick={() => handleSort('updated_at')}\n              >\n                Обновлено\n              </TableSortLabel>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {paginatedRepos.map((repo) => (\n            <TableRow key={repo.id} onClick={() => dispatch(setSelectedRepo(repo))}>\n              <TableCell>{repo.name}</TableCell>\n              <TableCell>{repo.language}</TableCell>\n              <TableCell>{repo.forks_count}</TableCell>\n              <TableCell>{repo.stargazers_count}</TableCell>\n              <TableCell>{new Date(repo.updated_at).toLocaleDateString()}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        component=\"div\"\n        count={repos.length}\n        page={currentPage - 1}\n        onPageChange={handleChangePage}\n        rowsPerPage={pageSize}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n};\n\nexport default RepoTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}